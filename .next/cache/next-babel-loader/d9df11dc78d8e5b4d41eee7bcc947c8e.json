{"ast":null,"code":"var _jsxFileName = \"/Users/cliffordcrerar/letsplay/_10_next-ts-start/components/blog-index-item.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport PublishedAt from './utils/published-at';\n\nvar Post = function Post(_ref) {\n  var title = _ref.title,\n      summary = _ref.summary,\n      date = _ref.date,\n      path = _ref.path;\n  return React.createElement(\"article\", {\n    className: \"jsx-3009098722\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"jsx-3009098722\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"jsx-3009098722\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"jsx-3009098722\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, title))), React.createElement(PublishedAt, {\n    link: path,\n    date: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"jsx-3009098722\" + \" \" + 'post-summary',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, summary), React.createElement(_JSXStyle, {\n    id: \"3009098722\",\n    __self: this\n  }, \"article.jsx-3009098722{margin-bottom:2em;}a.jsx-3009098722{-webkit-text-decoration:none;text-decoration:none;}.post-summary.jsx-3009098722{margin-top:1em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jbGlmZm9yZGNyZXJhci9sZXRzcGxheS9fMTBfbmV4dC10cy1zdGFydC9jb21wb25lbnRzL2Jsb2ctaW5kZXgtaXRlbS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFlZ0IsQUFHMkIsQUFJRyxBQUlOLGVBQ2pCLEdBUkEsZ0NBSUEiLCJmaWxlIjoiL1VzZXJzL2NsaWZmb3JkY3JlcmFyL2xldHNwbGF5L18xMF9uZXh0LXRzLXN0YXJ0L2NvbXBvbmVudHMvYmxvZy1pbmRleC1pdGVtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IFB1Ymxpc2hlZEF0IGZyb20gJy4vdXRpbHMvcHVibGlzaGVkLWF0J1xuXG5jb25zdCBQb3N0ID0gKHsgdGl0bGUsIHN1bW1hcnksIGRhdGUsIHBhdGggfSkgPT4gKFxuICA8YXJ0aWNsZT5cbiAgICA8aGVhZGVyPlxuICAgICAgPGgyPlxuICAgICAgICA8TGluayBocmVmPXtwYXRofT5cbiAgICAgICAgICA8YT57dGl0bGV9PC9hPlxuICAgICAgICA8L0xpbms+XG4gICAgICA8L2gyPlxuXG4gICAgICA8UHVibGlzaGVkQXQgbGluaz17cGF0aH0gZGF0ZT17ZGF0ZX0gLz5cbiAgICA8L2hlYWRlcj5cbiAgICA8ZGl2IGNsYXNzTmFtZT0ncG9zdC1zdW1tYXJ5Jz57c3VtbWFyeX08L2Rpdj5cbiAgICA8c3R5bGUganN4PntgXG4gICAgICBhcnRpY2xlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgfVxuXG4gICAgICAucG9zdC1zdW1tYXJ5IHtcbiAgICAgICAgbWFyZ2luLXRvcDogMWVtO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9hcnRpY2xlPlxuKVxuXG5leHBvcnQgZGVmYXVsdCBQb3N0XG4iXX0= */\\n/*@ sourceURL=/Users/cliffordcrerar/letsplay/_10_next-ts-start/components/blog-index-item.js */\"));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/cliffordcrerar/letsplay/_10_next-ts-start/components/blog-index-item.js"],"names":["Link","PublishedAt","Post","title","summary","date","path"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBC,IAAnB,QAAmBA,IAAnB;AAAA,MAAyBC,IAAzB,QAAyBA,IAAzB;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADF,CADF,CADF,EAOE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEG,IAAnB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE;AAAA,wCAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,OAA/B,CAVF;AAAA;AAAA;AAAA,k/CADW;AAAA,CAAb;;AA4BA,eAAeF,IAAf","sourcesContent":["import Link from 'next/link'\nimport PublishedAt from './utils/published-at'\n\nconst Post = ({ title, summary, date, path }) => (\n  <article>\n    <header>\n      <h2>\n        <Link href={path}>\n          <a>{title}</a>\n        </Link>\n      </h2>\n\n      <PublishedAt link={path} date={date} />\n    </header>\n    <div className='post-summary'>{summary}</div>\n    <style jsx>{`\n      article {\n        margin-bottom: 2em;\n      }\n\n      a {\n        text-decoration: none;\n      }\n\n      .post-summary {\n        margin-top: 1em;\n      }\n    `}</style>\n  </article>\n)\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}